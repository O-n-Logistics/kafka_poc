spring:
  application:
    name: consumer

  kafka:
    # Docker? ?? Kafka ???? ?????.
    bootstrap-servers: ENC(7UNp0NkDAi92U2ViEIVmfyYc2B1C2FoKxfMO+pGDXPe9/SPdGAIQ/5MuzNxDX6JshQkPo7z7crmQJyRWg1mVgVb6zFeVKCkz)
    # ???? ??: Order ???? Kafka? ?? ???? ??(??)???.
    producer:
      # ???? key? ?????? ???? ???
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # ???? value? JSON ???? ????? ?? ???
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      # ??? ?? ID? saga-example-group?? ?????.
      group-id: saga-example-group
      # Kafka ??? ?? ? ???, ?? ???? ???? ??? ?? ???? ???? ?? ? ???? ????? ??? ??? ????? ?????.
      auto-offset-reset: earliest
      # ???? key? ??????? ???? ???
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # ???? value? JSON ???? ?????? ?? ???
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      # ???? ? ??? ??? ?? (???? ?? ???? ??)
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: '**'
  jpa:
    open-in-view: false
server:
  port: 8080
